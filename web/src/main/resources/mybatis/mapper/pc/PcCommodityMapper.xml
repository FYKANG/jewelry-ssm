<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.ykthink.jewelry.orm.pc.PcCommodityMapper">
    <resultMap id="commodityIntroductionResultMap"
               type="cn.ykthink.jewelry.model.pc.commodity.vo.PcCommodityIntroductionVO">
        <id column="commodity_uuid" property="commodityUuid"/>
        <result column="title" property="title"/>
        <result column="subhead" property="subhead"/>
        <result column="commodity_price" property="commodityPrice"/>
        <collection property="imageList" ofType="cn.ykthink.jewelry.model.pc.commodity.vo.PcCommodityImageVO"
                    column="{commodityJewelryUuid=commodity_uuid}"
                    select="selectCommodityJewelryIntroductionImage">
            <result column="image_url" property="imageUrl"/>
        </collection>
    </resultMap>

    <select id="selectCommodityIntroduction" resultMap="commodityIntroductionResultMap">
        select commodity.uuid            as commodity_uuid,
               commodity.title           as title,
               commodity.subhead         as subhead,
               commodity.commodity_price as commodity_price
        from commodity
        where commodity.is_deleted = 0
          and commodity.commodity_status = 1
        order by commodity.commodity_no
    </select>

    <select id="selectCommodityJewelryIntroductionImage"
            resultType="cn.ykthink.jewelry.model.pc.commodity.vo.PcCommodityImageVO">
        select image_url
        from images
        where commodity_jewelry_uuid = #{commodityJewelryUuid} and is_deleted = 0
    </select>

    <resultMap id="commodityResultMap" type="cn.ykthink.jewelry.model.pc.commodity.vo.PcCommodityInfoVO">
        <id column="uuid" property="commodityUuid"/>
        <result column="commodity_no" property="commodityNo"/>
        <result column="title" property="title"/>
        <result column="subhead" property="subhead"/>
        <result column="commodity_price" property="commodityPrice"/>
        <result column="detail" property="detail"/>
        <result column="texture_name" property="textureName"/>
        <association property="store" javaType="cn.ykthink.jewelry.model.pc.user.vo.PcUserStoreVO">
            <result column="store_total" property="storeTotal"/>
            <result column="store_consumption" property="storeConsumption"/>
        </association>
        <collection property="imageList" ofType="cn.ykthink.jewelry.model.pc.commodity.vo.PcCommodityImageVO">
            <result column="image_url" property="imageUrl"/>
        </collection>
    </resultMap>

    <select id="selectCommodity" resultMap="commodityResultMap">
        select commodity.uuid            as commodity_uuid,
               images.image_url          as image_url,
               commodity.commodity_no    as commodity_no,
               commodity.title           as title,
               commodity.subhead         as subhead,
               commodity.commodity_price as commodity_price,
               commodity.detail          as detail,
               texture.texture_name      as texture_name,
               store.store_total         as store_total,
               store.store_consumption   as store_consumption
        from commodity,
             images,
             texture,
             store
        where commodity.uuid = #{commodityUuid}
          and commodity.uuid = images.commodity_jewelry_uuid
          and commodity.texture_uuid = texture.uuid
          and commodity.store_uuid = store.uuid
    </select>

    <resultMap id="jewelryIntroductionResultMap"
               type="cn.ykthink.jewelry.model.pc.commodity.vo.PcJewelryIntroductionVO">
        <id column="jewelry_uuid" property="jewelryUuid"/>
        <result column="jewelry_no" property="jewelryNo"/>
        <result column="jewelry_price" property="jewelryPrice"/>
        <collection property="imageList" ofType="cn.ykthink.jewelry.model.pc.commodity.vo.PcCommodityImageVO"
                    column="{commodityJewelryUuid=jewelry_uuid}"
                    select="selectCommodityJewelryIntroductionImage">
            <result column="image_url" property="imageUrl"/>
        </collection>
    </resultMap>

    <select id="selectJewelryIntroduction" resultMap="jewelryIntroductionResultMap">
        select jewelry.uuid            as jewelry_uuid,
               jewelry.jewelry_no      as title,
               jewelry.jewelry_price   as commodity_price
        from  jewelry
        where jewelry.is_deleted = 0
        order by jewelry.jewelry_no
    </select>

    <resultMap id="jewelryResultMap" type="cn.ykthink.jewelry.model.pc.commodity.vo.PcJewelryInfoVO">
        <id column="uuid" property="jewelryUuid"/>
        <result column="jewelry_no" property="jewelryNo"/>
        <result column="shape" property="shape"/>
        <result column="color" property="color"/>
        <result column="clarity" property="clarity"/>
        <result column="cut" property="cut"/>
        <result column="polishing" property="polishing"/>
        <result column="light" property="light"/>
        <result column="jewelry_price" property="jewelryPrice"/>
        <collection property="imageList" ofType="cn.ykthink.jewelry.model.pc.commodity.vo.PcCommodityImageVO">
            <result column="image_url" property="imageUrl"/>
        </collection>
    </resultMap>

    <select id="selectJewelry" resultMap="jewelryResultMap">
        select jewelry.uuid     as jewelry_uuid,
               jewelry_no       as jewelry_no,
               shape            as shape,
               color            as color,
               clarity          as clarity,
               cut              as cut,
               polishing        as polishing,
               light            as polishing,
               jewelry_price    as jewelry_price,
               image_url        as image_url
        from jewelry,images
        where jewelry.uuid = #{jewelryUuid}
          and jewelry.uuid = images.commodity_jewelry_uuid
    </select>

    <insert id="insertJewelry">
        <selectKey keyProperty="uuid" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as uuid from dual
        </selectKey>
        insert into cart_jewelry(uuid,jewelry_uuid,jewelry_no,shape,color,clarity,cut,polishing,light,user_uuid,create_time,modified_time)
        values
        (
        #{uuid},
        #{jewelryUuid},
        #{jewelryNo},
        #{shape},
        #{color},
        #{clarity},
        #{cut},
        #{polishing},
        #{light},
        #{userUuid},
        DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"),
        DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s")
        )
    </insert>

    <insert id="insertCommodity">
        <selectKey keyProperty="uuid" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as uuid from dual
        </selectKey>
        insert into cart_commodity(uuid,commodity_uuid,cart_jewelry_uuid,size,user_uuid,texture_name,commodity_no,
        title,subhead,detail,create_time,modified_time)
        values
        (
        #{uuid},
        #{commodityUuid},
        #{cartJewelryUuid},
        #{size},
        #{userUuid},
        #{textureName},
        #{commodityNo},
        #{title},
        #{subhead},
        #{detail},
        DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"),
        DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s")
        )
    </insert>
</mapper>
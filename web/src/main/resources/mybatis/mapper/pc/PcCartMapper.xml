<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.ykthink.jewelry.orm.pc.PcCartMapper">
    <select id="selectCart" resultMap="cartResultMap">
        select cc.uuid,
               cc.commodity_uuid,
               cc.cart_jewelry_uuid,
               cc.commodity_no,
               cc.title,
               cc.subhead,
               cc.detail,
               cc.texture_name,
               commodity.commodity_price,
               store.store_total                                 as store_total,
               store.store_consumption                           as store_consumption,
               cj.jewelry_uuid,
               cj.jewelry_no,
               cj.shape,
               cj.color,
               cj.clarity,
               cj.cut,
               cj.polishing,
               cj.light,
               jewelry.jewelry_price,
               commodity.commodity_price + jewelry.jewelry_price as price
        from cart_commodity as cc
                 left join commodity on commodity.uuid = cc.commodity_uuid
                 left join store on commodity.store_uuid = store.uuid
                 left join cart_jewelry as cj on cc.cart_jewelry_uuid = cj.uuid,
             jewelry
        where cc.user_uuid = #{userUuid}
          and cj.jewelry_uuid = jewelry.uuid
          and cc.is_order = 0
          and cj.is_order = 0
          and cc.is_deleted = 0
          and cj.is_deleted = 0
    </select>

    <resultMap id="cartResultMap" type="cn.ykthink.jewelry.model.pc.cart.vo.PcUserCartVO">
        <id column="uuid" property="cartCommodityUuid"/>
        <result column="cart_jewelry_uuid" property="cartJewelryUuid"/>
        <result column="price" property="price"/>
        <collection property="cartCommodityList" ofType="cn.ykthink.jewelry.model.common.vo.CommonCommodityInfoVO">
            <result column="commodity_no" property="commodityNo"/>
            <result column="title" property="title"/>
            <result column="subhead" property="subhead"/>
            <result column="detail" property="detail"/>
            <result column="texture_name" property="textureName"/>
            <result column="commodity_price" property="commodityPrice"/>
            <collection property="store" ofType="cn.ykthink.jewelry.model.pc.user.vo.PcUserStoreVO">
                <result column="store_total" property="storeTotal"/>
                <result column="store_consumption" property="storeConsumption"/>
            </collection>
            <collection property="imageList" ofType="cn.ykthink.jewelry.model.common.vo.CommonCommodityImageVO"
                        column="{commodityJewelryUuid=commodity_uuid}"
                        select="selectCommodityJewelryIntroductionImage">
                <result column="image_url" property="imageUrl"/>
            </collection>
        </collection>
        <collection property="cartJewelryList" ofType="cn.ykthink.jewelry.model.pc.commodity.vo.PcJewelryInfoVO">
            <result column="jewelry_no" property="jewelryNo"/>
            <result column="shape" property="shape"/>
            <result column="color" property="color"/>
            <result column="clarity" property="clarity"/>
            <result column="cut" property="cut"/>
            <result column="polishing" property="polishing"/>
            <result column="light" property="light"/>
            <result column="jewelry_price" property="jewelryPrice"/>
            <collection property="imageList" ofType="cn.ykthink.jewelry.model.common.vo.CommonCommodityImageVO"
                        column="{commodityJewelryUuid=jewelry_uuid}"
                        select="selectCommodityJewelryIntroductionImage">
                <result column="image_url" property="imageUrl"/>
            </collection>
        </collection>
    </resultMap>

    <select id="selectCommodityJewelryIntroductionImage"
            resultType="cn.ykthink.jewelry.model.common.vo.CommonCommodityImageVO">
        select image_url
        from images
        where commodity_jewelry_uuid = #{commodityJewelryUuid}
          and is_deleted = 0
    </select>

    <update id="removeIsDeleted">
        update cart_commodity as cc,
        cart_jewelry as cj
        <set>
            cc.is_deleted = 1,
            cj.is_deleted = 1
        </set>
        where cc.uuid = #{cartCommodityUuid}
        and cc.cart_jewelry_uuid = cj.uuid
    </update>

    <select id="selectConsigneeMessage" resultType="cn.ykthink.jewelry.model.pc.cart.to.PcCartReceiverInfoTO">
        select receiver_name         as name,
               receiver_province     as province,
               receiver_city         as city,
               receiver_district     as district,
               receiver_address      as address,
               receiver_phone_number as phone,
               zip_code              as zip_code
        from consignee
        where uuid = #{uuid}
          and is_deleted = 0
    </select>
    <select id="selectOrderCartTotal" resultType="java.math.BigDecimal">
        SELECT
        sum(c.commodity_price+j.jewelry_price) as total
        FROM
        cart_commodity AS cc
        left join commodity as c on cc.commodity_uuid=c.uuid,
        cart_jewelry AS cj
        left join jewelry as j on j.uuid=cj.jewelry_uuid
        WHERE
        cj.uuid = cc.cart_jewelry_uuid
        and
        cc.uuid IN
        <foreach collection="cartCommodityUuidList" item="cartCommodityUuid" open="(" close=")" separator=",">
            #{cartCommodityUuid}
        </foreach>
        group by cc.user_uuid
    </select>
    <select id="selectCartJewelryUuid" resultType="java.lang.String">
        select cart_jewelry_uuid
        from cart_commodity
        where uuid = #{cartCommodityUuid}
    </select>
    <select id="selectJewelryPrice" resultType="java.math.BigDecimal">
        select j.jewelry_price
        from cart_jewelry as cj
                 left join jewelry as j on cj.jewelry_uuid = j.uuid
        where cj.uuid = #{cartJewelryUuid}
    </select>
    <select id="selectCommodityPrice" resultType="java.math.BigDecimal">
        select c.commodity_price
        from cart_commodity as cc
                 left join commodity as c on c.uuid = cc.commodity_uuid
        where cc.uuid = #{cartCommodityUuid}
    </select>
    <select id="checkCart" resultType="java.lang.Integer">
        select count(uuid) from cart_commodity
        where uuid in
        <foreach collection="cartCommodityUuidList" item="cartCommodityUuid" open="(" close=")" separator=",">
            #{cartCommodityUuid}
        </foreach>
        and (is_order=1 or is_deleted=1)
    </select>

    <update id="updateCart">
        update cart_commodity as cc,
        cart_jewelry as cj
        <set>
            cc.is_order = 1,
            cj.is_order = 1
        </set>
        where cc.uuid = #{cartCommodityUuid}
        and cc.cart_jewelry_uuid = cj.uuid
        and cc.is_deleted = 0
        and cj.is_deleted = 0
    </update>

    <insert id="insertOrder">
        <selectKey keyProperty="uuid" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as uuid from dual
        </selectKey>
        insert into
        `order`(
        uuid,
        user_uuid,
        order_no,
        order_describe,
        pay_price,
        pay_date,
        logistics_name,
        logistics_number,
        receiver_name,
        receiver_phone_number,
        receiver_province,
        receiver_city,
        receiver_district,
        receiver_address,
        zip_code,
        create_time,
        modified_time
        )
        values(
        #{uuid},
        #{userUuid},
        #{orderNo},
        #{orderDescribe},
        #{payPrice},
        #{payDate},
        #{logisticsName},
        #{logisticsNumber},
        #{receiverName},
        #{receiverPhoneNumber},
        #{receiverProvince},
        #{receiverCity},
        #{receiverDistrict},
        #{receiverAddress},
        #{zipCode},
        DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"),
        DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s")
        )
    </insert>

    <insert id="insertOrderCommodity">
        <selectKey keyProperty="uuid" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as uuid from dual
        </selectKey>
        insert into
        order_commodity(
        uuid,
        cart_commodity_uuid,
        order_uuid,
        order_jewelry_uuid,
        commodity_price,
        create_time,
        modified_time
        )
        values(
        #{uuid},
        #{cartCommodityUuid},
        #{orderUuid},
        #{orderJewelryUuid},
        #{commodityPrice},
        DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"),
        DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s")
        )
    </insert>

    <insert id="insertOrderJewelry">
        <selectKey keyProperty="uuid" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as uuid from dual
        </selectKey>
        insert into
        order_jewelry(
        uuid,
        order_uuid,
        cart_jewelry_uuid,
        jewelry_price,
        create_time,
        modified_time
        )
        values(
        #{uuid},
        #{orderUuid},
        #{cartJewelryUuid},
        #{jewelryPrice},
        DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s"),
        DATE_FORMAT(NOW(),"%Y-%m-%d %H:%i:%s")
        )
    </insert>

    <update id="updateOrder">
        update `order` as o
        set order_status = 1
        where o.uuid = #{orderUuid}
    </update>
    <update id="updateCartStatusIsOrder">
        update ${table}
        set is_order      = 1,
            modified_time = DATE_FORMAT(NOW(), "%Y-%m-%d %H:%i:%s")
        where uuid = #{uuid}
    </update>
</mapper>